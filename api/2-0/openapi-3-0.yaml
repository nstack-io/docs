openapi: 3.0.0
info:
  title: API
  description: 
    This is the public API for nstack.io
    
    Setup an application and use Application-Id and Rest-Api-Key
  version: '2.5'


  
servers:
  - url: https://nstack.io
    variables: {}
security: 
    - AppId: []
      ApiKey: []
      
paths:
  /api/v2/scropper:
    post:
      summary: "Return the focal point of an image"
      tags:
        - Scropper
      description: "**Get focal point on a image**\n\n\n_Initial response time can be 15sec in case you hit a cold container_\n\n\n####"
      operationId: postGetFocalPoint
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                  url:
                    type: string
                    in: header
                    description: '**Required** if no file, only jpg, png'
                    example: https://example.jpg
                  file: 
                    type: string
                    format: binary
                    in: header
                    description: '**Required** if no url, only jpg, png'
                  data-center:
                    type: string
                    description: 'Optional, default is AWS: Ireland(Options AWS: Ireland)'
                    example: 'AWS: Ireland'
        required: false
        x-send-file-in-body: false            
      responses:
          "200":
            description: 'OK'
            headers: {}
            content:
              application/json:
                schema:
                 $ref: '#/components/schemas/Scropper'
          "401":
            description: 'Missing Application Credentials'
          "403":
            description: 'Forbidden'
          "412":
            description: 'Validation Error'
          "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/stagger:
    post:
      summary: "Get a tag from a text"
      tags:
        - Stagger
      description: "Detect the language of the text, translate to english and find tag"
      operationId: postGettag
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - text
              properties:
                text:
                  type: string
                  description: 'The given text you would like to find a tag in'
                  example: prisen er for hÃ¸j
                data-center:
                  type: string
                  description: 'Optional, default is AWS: Ireland(Options AWS: Ireland)'
                  example: aws:ireland
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "412":
            description: 'Validation Error'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/collections/{collectionId}:
    get:
      tags:
       - Collections
      summary: View
      description: >-
        Get a id of content collection
      operationId: getView
      parameters:
      - in: path
        name: collectionId
        required: true
        description: 'ID of content collection'
        example: 66
        schema:
          type: integer
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/collections/{collectionId}/items:
    post:
      tags:
        - Collections
      summary: Createitem
      description: >-
        Create a new item to a array type collection    
      operationId: postCreateItem
      parameters:
        - name: collectionId
          in: path
          description: 'Collection ID'
          example: 66
          style: simple
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              $ref: '#/components/schemas/CollectionResponse'
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/collections/{collectionId}/items/{itemId}:
    delete:
      tags:
        - Collections
      summary: Delete item
      description: 'Delete an item'
      operationId: deleteItem
      parameters:
        - name: collectionId
          in: path
          required: true
          example: 66
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          example: 489
          schema:
            type: integer      
      responses:
        "200":
          description: 'OK'
          headers: {}
        "204":
          description: 'User was deleted.'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "500":
            description: 'Internal Server Error _Please read response message_'
    get:
      tags:
        - Collections
      summary: View item
      description: 'Return an item from a collection'
      operationId: Viewitem
      parameters:
        - name: collectionId
          in: path
          required: true
          example: 66
          description: collectionId
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          example: 489
          description: itemId
          schema:
            type: integer
      responses:
        "200":
            description: 'OK'
            headers: {}
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/collections/{collectionId}/items/{itemId}/update:
    post:
      tags:
        - Collections
      summary: Update
      description: 'Update an item in the project'
      operationId: getUpdateCollection
      parameters:
        - name: collectionId
          in: path
          required: true
          description: the id of the collection
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          description: the id of the item you wish to update
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                key0int:
                  type: integer
                  format: int32
                key1string:
                  type: string
                key2float:
                  type: number
                  format: double
                key3wysiwygsim:
                  type: string
                key4asset:
                  type: string
                key5boolean:
                  type: boolean
                key6wysiwygadvanced:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read the response message_'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/responses/{id_or_slug}:
    get:
      tags:
        - Responses
      summary: Show
      description: Get one response    
      operationId: getShowResponse
      parameters:
        - name: id_or_slug
          in: path
          description: _**required** ID or slug of content type_ [15, "terms", "about"]
          required: true
          schema: 
            type: string
        - name: data
          description: 'default true - should the object be in data'
          example: true
          in: query
          schema:
             type: boolean           
      responses:
        "200":
          description: 'OK'
          content:
            application/json:  
              schema:
                $ref: '#/components/schemas/TestResponses'
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/files:
    post:
      tags:
        - Files
      summary: Store
      description: "Store a file"
      operationId: getStoreFile
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - name
                - file
                - privacy
              properties:
                name:
                  type: string
                tags:
                  type: string
                gone_at:
                  type: string
                file:
                  type: string
                privacy:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/localize/{platform-slug}/languages:
    get:
      tags:
        - Localize
      summary: Indexlanguages
      description: "Get available languages for a platform"
      operationId: getIndexlanguages
      parameters:
        - name: platform-slug
          example: mobile
          in: path
          required: true
          schema: 
            type: string
      responses:
        "200":
          description: 'OK'
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:59:25 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Indexlanguages'
              example:
                data:
                  - id: 11
                    name: English (UK)
                    locale: en-GB
                    direction: LRM
                    is_default: true
                    is_best_fit: true
                  - id: 14
                    name: Spanish (Spain)
                    locale: es-ES
                    direction: LRM
                    is_default: false
                    is_best_fit: false
                  - id: 6
                    name: Danish
                    locale: da-DK
                    direction: LRM
                    is_default: false
                    is_best_fit: false
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/localize/{platform-slug}/languages/best_fit:
    get:
      tags:
        - Localize
      summary: Languagebestfit
      description: "Get best fit language from accept-language header"
      operationId: getLanguageBestFit
      parameters:
        - name: platform-slug
          in: path
          required: true
          example: mobile
          schema: 
            type:  string
      responses:
        "200":
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:59:34 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languagebestfit'
              example:
                data:
                  id: 11
                  name: English (UK)
                  locale: en-GB
                  direction: LRM
                  is_default: false
                  is_best_fit: false
                meta:
                  Accept-Language: null
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/localize/resources/platforms/{platform-slug}:
    get:
      tags:
        - Localize
      summary: Indexresource
      description: 'Request details'
      operationId: getIndexResource
      parameters:
        - name: platform-slug
          in: path
          example: mobile
          required: true
          schema: 
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Localize'
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
  /api/v2/content/localize/resources/{id}:
    get:
      tags:
        - Localize
      summary: Showresource
      operationId: showResourceById
      parameters: 
        - in: path
          name: id
          description: show a resource in the project from the showResourceId
          example: 44
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ''
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Showresource'
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
      deprecated: false            
  /api/v2/content/localize/proposals:
    post:
      tags:
        - Localize
      summary: Store proposal
      description: Store the localize proposal      
      operationId: storeProposal
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - key
                - value
                - locale
                - platform
                - guid
                - section
              properties:
                key:
                  type: string
                value:
                  type: string
                locale:
                  type: string
                platform:
                  type: string
                guid:
                  type: string
                section:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "201":
          description: Successfully created 
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Preconditions failed'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'
      deprecated: false
    get:
      tags:
        - Localize
      summary: Indexproposal
      description: get proposal by guid
      operationId: Indexproposal
      parameters:
        - name: state
          in: header
          description: '**optional, default unaccepted** *Options: unaccepted, accepted, all*'
          example: unaccepted
          style: simple
          schema:
            type: string
        - name: guid
          in: header
          description: '**optional** _shows if the proposal is deletable or not for the specfied guid_'
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datum'
        "401":
          description: 'Collection does not have write access for api'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'      
  /api/v2/content/localize/proposals/{proposalId}:
    delete:
      tags:
        - Localize
      summary: Deleteproposal
      description: "Delete a specified proposal"
      operationId: deleteProposal
      parameters:
        - name: guid
          in: query
          description: 'guid of the item to delete'
          example: "aabc1234"
          required: true
          explode: true
          schema:
            type: string
        - name: proposalId
          in: path
          description: 'id of proposal to delete'
          example: 1234
          required: true
          explode: true
          schema:
            type: integer
      responses:
        "200":
          description: 'OK'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexProposal'
        "401":
          description: 'Invalid guid'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'      
      deprecated: false      
  /api/v2/content/dashboards/visualizations/{key}:
    get:
      tags:
        - Dashboards
      summary: Visualization
      description: "Get visualization"
      operationId: getVisualization
      parameters:
        - name: key
          in: path
          description: 'id of visualization'
          example: VIS-623d06a0-25e1-4f58-8a82-f5541cccee54
          required: true
          schema:
            type: string
        - name: mode
          in: query
          description: '**Optional**  _standard (default)_'
          example: standard
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
        "401":
          description: 'Invalid guid'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'      
      deprecated: false      
  /api/v2/content/dashboards/{key}:
    get:
      tags:
        - Dashboards
      summary: Dashboard
      description: "Get Dashboard by key"
      operationId: getDashboard
      parameters:
        - name: key
          in: path
          description: 'The key used to get Dashboard'
          example: DAS-8ddbde18-9d2a-4532-b114-aea3024a1635
          required: true
          style: simple
          schema:
            type: string
        - name: mode
          in: header
          description: '**Optional**  _standard (default)_'
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardById'
        "401":
          description: 'Invalid guid'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'      
      deprecated: false        
  /api/v2/content/terms:
    get:
      tags:
        - Terms
      summary: Index
      description: List all Terms
      operationId: getTerms
      parameters:
        - name: N-Meta
          in: header
          description: ''
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terms'
        "401":
          description: 'Invalid guid'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
          description: 'Internal Server Error _Please read response message_'      
      deprecated: false          
  /api/v2/content/terms/{id}/versions:
    get:
      tags:
        - Terms
      summary: Index Versions
      description: 'Get Versions from slugOrId'
      operationId: getIndexVersions
      parameters:
        - name: guid
          in: query
          description: 'The id of the version of the object'
          example: 2
          required: true
          style: simple
          schema:
            type: string 
        - name: id
          in: path
          description: 'The Id of the object'
          required: true
          example: 9
          style: simple
          schema:
            type: string 
        - name: N-Meta
          in: header
          description: ''
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsResponse'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/terms/{id}/versions/newest:
    get:
      tags:
        - Terms
      summary: getNewestVersion
      description: List newest Version      
      operationId: getNewestVersion
      parameters:
        - name: guid
          in: query
          description: 'The id of the version of the object'
          required: true
          example: 2
          style: simple
          schema:
            type: string       
        - name: id
          in: path
          description: 'The id of the version'
          example: 9
          required: true
          style: simple
          schema:
            type: string      
        - name: N-Meta
          in: header
          description: ''
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          required: true
          description: ''
          example: 1
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsWithAccLanguage'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/terms/versions/{id}:
    get:
      tags:
        - Terms
      summary: getShowVersion
      description: Show version by id
      operationId: getShowVersion
      parameters:
        - name: id
          in: path
          description: 'The id of the object'
          example: 9
          required: true
          style: simple
          schema:
            type: string  
        - name: guid
          in: query
          description: 'the guid of the version of terms'
          example: 2
          required: true
          style: simple
          explode: true
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          style: simple
          schema:
            type: string
        - name: Accept-Language
          required: true
          in: header
          description: ''
          example: 1
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsWithAccLanguage'
        "204":
          description: 'User was deleted.'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Validation Error'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/content/terms/versions/{term_version_id}/views:
    post:
      tags:
        - Terms
      summary: StoreView
      description: Create a new View
      operationId: postStoreView
      parameters:
        - name: term_version_id
          in: path
          description: '**required** _ID of Terms Version_'
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - term_version_id
                - guid
                - identifier
                - locale
              properties:
                term_version_id:
                  type: integer
                guid:
                  type: string
                identifier:
                  type: string
                locale:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/notify/updates:
    get:
      tags:
        - Version control
      summary: Indexupdate
      description: "Update the application"
      operationId: getIndexupdate
      parameters:
        - name: platform
          in: query
          description: '**required** ["ios", "android", "windows"]'
          example: android
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: current_version
          in: query
          description: '**required** Current version of app making the request'
          example: 2
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: last_version
          in: query
          description: ''
          example: 1
          style: form
          explode: true
          schema:
            type: string
        - name: test
          in: query
          description: 'Enable test mode, false equals production'
          example: true
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionControl'
              example:
                update: force
                update_versions:
                  - id: 7
                    version: 2.0.0.13b
                    update: force
                    new_in_version: false
                    change_log:
                    file_url:
                  - id: 5
                    version: 2.0.1.1111
                    update: 'on'
                    new_in_version: false
                    change_log:
                    file_url:
                  - id: 4
                    version: 2.0.0.0
                    update: 'on'
                    new_in_version: false
                    change_log: aaa22
                    file_url:
                new_in_version: false
                new_in_versions: []
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/notify/updates/views:
    post:
      tags:
        - Version control
      summary: Update a view
      description: Register a view update
      operationId: postUpdateView
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - guid
                - update_id
                - answer
                - type
              properties:
                guid:
                  type: integer
                update_id:
                  type: integer
                  description: '**required** _Id of update where view was updated_'
                answer:
                  type: string
                  description: '**required** [_"no", "yes"_]'
                type:
                  type: string
                  description: '**required** ["_newer_version", "new_in_version_"]'
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/notify/messages:
    get:
      tags:
        - Messages
      summary: Messages
      description: Get message
      operationId: getMessages
      parameters:
        - name: platform
          in: query
          description: '**required** ["ios", "android", "windows"]'
          example: ios
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Wed, 03 Jul 2019 10:53:42 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Message not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/notify/rate_reminder:
    get:
      tags:
        - Rate reminders
      summary: GetShow
      description: "Get rate reminder"
      operationId: getRateReminder
      parameters:
        - name: platform
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: guid
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: integer
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateReminder'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/notify/rate_reminder/views:
    post:
      tags:
        - Rate reminders
      summary: Post Mark as seen
      description: "Post rate reminder"
      operationId: postRateReminder
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - guid
                - platform
                - answer
              properties:
                guid:
                  type: integer
                platform:
                  type: string
                answer:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/notify/rate_reminder_v2:
    get:
      tags:
        - Rate reminders V2
      summary: Get rate reminder v2
      description: "Get rate reminder"
      operationId: getRateReminderV2
      parameters:
        - name: guid
          in: query
          description: 'id of the rate reminder'
          example: 236
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: platform
          in: header
          description: 'which platform'
          example: android
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateReminderV2'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/notify/rate_reminder_v2/events:
    post:
      tags:
        - Rate reminders V2
      summary: ActionEvents
      description: "Post rate reminder"
      operationId: postActionEvents
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionEventsRequest'
            example:
              guid: hasfdda-safsafad-asdasd-asdas
              action: masiakla-tutaj
        required: true
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/notify/rate_reminder_v2/2/answers:
    post:
      tags:
        - Rate reminders V2
      summary: Answer
      description: "Post an answer"
      operationId: postAnswer
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
            example:
              guid: hasfdda-safsafad-asdasd-asdas
              answer: negative
        required: true
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/notify/rate_reminder_v2/actions:
    get:
      tags:
        - Rate reminders V2
      summary: Actions
      description: "Get rate reminder"
      operationId: getActionsV2
      parameters:
        - name: action
          in: header
          description: ''
          style: simple
          schema:
              $ref: '#/components/schemas/ActionEventsRequest'
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateReminder'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/continents:
    get:
      tags:
        - Continents
      summary: Get a list of continents
      description: "Retrieve a list of valid continents on Earth"
      operationId: getIndex
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Continents'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/continents/{id}:
    get:
      tags:
        - Continents
      summary: Get a continent by id
      description: "Retrieve a continent by id"
      operationId: getContinentById
      parameters:
        - name: id
          in: path
          description: '**required** _Continent id_'
          example: 45
          required: true
          style: simple
          schema:
            type: integer
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinentsById'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false   
  /api/v2/geographic/countries:
    get:
      tags:
        - Countries
      summary: GetIndex1
      description: "Retrieve a list of valid countries on Earth"
      operationId: getShowCountries
      parameters:
        - name: limit
          in: query
          description: "_Eg: [/api/geographic/countries?limit=1] Default limit is 500_"
          style: form
          explode: true
          schema:
            type: integer
        - name: order_by_column
          in: header
          description: "_Eg; [/api/geographic/countries?order\\_by\\_column=name]_"
          style: simple
          schema:
            type: string
        - name: order_by_direction
          in: query
          description: " _Eg; [/api/geographic/countries?order\\_by\\_direction=asc]_"
          style: form
          explode: true
          schema:
            type: string
        - name: search
          in: header
          description: "_Eg: [/api/geographic/countries?search=Andorra]"
          style: simple
          schema:
            type: string 
        - name: fields
          in: query
          description: "_Eg: [/api/geographic/countries?fields=name,code]_"
          style: form
          explode: true
          schema:
            type: string
        - name: continents
          in: header
          description: "_Eg: [/api/geographic/countries?continents=EU,AF]_"
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
  /api/v2/geographic/countries/{id}:
    get:
      tags:
        - Countries
      summary: Get details on country found by id
      description: >-
        Retrieve details of a specific country on Earth
      operationId: getShowCountry
      parameters:
        - name: id
          in: path
          description: '**required** _Country id_'
          example: 45
          required: true
          style: simple
          schema:
            type: integer
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/languages:
    get:
      tags:
        - Languages
      summary: Get Language
      description: "Retrieve a list of valid languages spoken by humans on Earth"
      operationId: getLanguages
      parameters:
        - name: limit
          in: header
          description: " _Eg: [/api/geographic/languages?limit=1] Default limit is 500_"
          style: simple
          schema:
            type: integer
        - name: search
          in: header
          description: "_Eg: [/api/geographic/languages?search=en]_"
          style: simple
          schema:
            type: string
        - name: fields
          in: header
          description: "_Eg: [/api/geographic/languages?fields=name,locale]_"
          schema: 
            type: string
      responses:
        "200":
          description: 'OK'
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Indexlanguages'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
          description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
          description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/ip-address:
    get:
      tags:
        - IP Addresses
      summary: Get summary from Ip
      description: "Retrieve details based on the requestee's ip address"
      operationId: getDetailsByIp
      parameters:
        - name: ip
          in: query
          description: '_Eg: [1.2.3.4] Default is your own_'
          example: 1.2.3.4
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPResponse'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/time_zones:
    get:
      tags:
        - Time zones
      summary: GetIndex123
      description: "Retrieve a list of valid timesones on Earth"
      operationId: getValidTimezones
      parameters:
        - name: limit
          in: header
          description: "_Eg: [/api/geographic/timezones?limit=1] Default limit is 1000_"
          style: simple
          schema:
            type: integer
        - name: order
          in: header
          description: "_Eg: [/api/geographic/timezones?order=name:desc]_"
          style: simple
          schema:
            type: string
        - name: search
          in: header
          description: "_Eg: [/api/geographic/timezones?search=Europe/Andorra]_"
          style: simple
          schema:
            type: string
        - name: fields
          in: header
          description: "_Eg: [/api/geographic/timezones?fields=name,abbr]_"
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timezones'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/time_zones/{id}:
    get:
      tags:
        - Time zones
      summary: GetShow123456
      description: "Retrieve details of a timezone by id"
      operationId: getTimeZoneById
      parameters:
        - name: id
          in: path
          description: 'Timezone id'
          example: 1
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timezone'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/geographic/time_zones/by_lat_lng:
    get:
      tags:
        - Time zones
      summary: Show details by latitude and longitude
      description: "Retrieve details of a nearest timezone by lat lng"
      operationId: getShowbylatlng
      parameters:
        - name: lat_lng
          in: query
          description: '_Eg: 55.1231,12.1231_'
          example: 55.1231,12.1231
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneByLatLng'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/ugc/feedbacks:
    post:
      tags:
        - UGC
      summary: Feedback
      description: "Request details"
      operationId: getFeedback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - breadcrumbs[0][meta]
                - os
                - device
                - app_version
                - name
                - email
                - message
                - image
                - type
                - platform
                - meta[key]
                - breadcrumbs[0][event]
                - breadcrumbs[0][timestamp]
              properties:
                breadcrumbs[0][meta]:
                  type: string
                os:
                  type: string
                device:
                  type: string
                app_version:
                  type: string
                name:
                  type: string
                email:
                  type: string
                message:
                  type: string
                image:
                  type: string
                type:
                  type: string
                platform:
                  type: string
                meta[key]:
                  type: string
                breadcrumbs[0][event]:
                  type: string
                breadcrumbs[0][timestamp]:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/ugc/results:
    post:
      tags:
        - UGC
      summary: Get results
      description: "Get results"
      operationId: getFeedbackResult
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - key
                - user
                - answer
                - points
                - tag
              properties:
                key:
                  type: string
                user:
                  type: string
                answer:
                  type: array
                  items:
                    type: integer
                    format: int32
                  description: ''
                points:
                  type: integer
                  format: int32
                tag:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/ugc/push-logs:
    post:
      tags:
        - UGC
      summary: Get push logs
      description: "Get Push Logs"
      operationId: getPushLogs
      parameters:
        - name: provider
          in: header
          description: "_Eg: fcm, urban-airship_"
          example: fcm, urban-airship
          required: true
          style: simple
          schema:
            type: string
        - name: key
          in: header
          description: "_Eg: App key in fcm / ua_"
          example: App key in fcm / ua
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: header
          description: "_Eg: standard, freind-request, taxi-arrived etc_"
          example: standard, friend-request, taxi-arrived
          required: true
          style: simple
          schema:
            type: string
        - name: succeeded
          in: header
          description: "_Eg: Did push get sent?_"
          example: true
          required: true
          style: simple
          schema:
            type: boolean
        - name: request
          in: header
          description: "_Eg: Insert everything passed to provider_"
          example: Insert everything passed to provider
          style: simple
          schema:
            type: string
        - name: response
          in: header
          description: "_Eg: Insert everything received from provider_"
          example: Insert everything received from provider
          style: simple
          schema:
            type: string
        - name: user_id
          in: header
          description: "_Eg: User id_"
          example: 1213
          style: simple
          schema:
            oneOf:
              - type: string
              - type: integer
        - name: relation_type
          in: header
          description: "_Eg: Booking, Company etc_"
          example: Booking
          style: simple
          schema:
            type: string
        - name: relation_id
          in: header
          description: "_Eg: Id of Booking, id of Company etc_"
          example: 4144
          style: simple
          schema:
            type: integer
      responses:
        "200":
          description: 'OK'
          headers: {}
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false     
  /api/v2/validator/email:
    get:
      tags:
        - Validator
      summary: Email
      description: "Validate email syntax"
      operationId: getEmail
      parameters:
        - name: email
          in: query
          description: 'Email to validate'
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/validator/phone:
    get:
      tags:
        - Validator
      summary: Phone
      description: >-
        Validate phone number
      operationId: getPhone
      parameters:
        - name: phone
          in: query
          description: '**required** _Email to validate_'
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: fallback_country_code
          in: query
          description: "_Eg: [dk, gb, ...] - default is dk_"
          example: dk
          style: form
          schema:
            type: string
        - name: twilio
          in: query
          description: '_Validate against Twilio - Paid service!_'
          example: false
          style: form
          schema:
            type: boolean
        - name: twilio_type
          in: query
          description: '_Eg: ["all", "mobile", "landline"]_'
          example: all
          style: form
          schema:
            type: string            
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false 
  /api/v2/open:
    post:
      tags:
        - App open
      summary: Appopen
      description: ''
      operationId: postAppopen
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - platform
                - guid
                - version
                - last_updated
                - dev
              properties:
                platform:
                  type: string
                  description: '_Eg: ios/android/web_'
                guid:
                  type: string
                  description: '**required** `unique generated string` *Eg: 9bc4b39a-0af5-4b54-a5a5-88ad334dbd4b*'
                version:
                  type: string
                  description:  '**required if not web** `format: xxx.yyy.zzz` Previous version of application (Auto update can have happened)'
                old_version:
                  type: string
                  description:  '**required if not web** `format: xxx.yyy.zzz` Previous version of application (Auto update can have happened)'
                  example:  2.0.0 / 212.01.1
                last_updated:
                  type: string
                  description: 'Previous version of application (Auto update can have happened)'
                  example: 2019-06-15T14:29:50+00:00
                dev:
                  type: boolean
                  description: 'if true, bypass publishes and only use newest resource (set of key/values)'
                  example: false
                test:
                  type: boolean
                  description: 'if true, used the app version from "test env'
                  example: false
        required: false
        x-send-file-in-body: false
      responses:
        "200":
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 17 Jun 2019 05:26:58 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppOpen'
              example:
                data:
                  count: 74
                  update:
                    newer_version:
                      state: yes
                      last_id: 621
                      version: 2.0 - 2.0
                      link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
                      translate:
                        title: New version is out, please update
                        message: ''
                        positiveBtn: Update
                        negativeBtn: Cancel
                  localize:
                    - id: 938
                      url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
                      last_updated_at: '"2019-06-16T14:29:50+00:00"'
                      should_update: true
                      language:
                        id: 56
                        name: English
                        locale: en_EN
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 939
                      url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
                      last_updated_at: '"2019-06-16T14:44:30+00:00"'
                      should_update: true
                      language:
                        id: 6
                        name: Danish
                        locale: da-DK
                        direction: LRM
                        is_default: true
                        is_best_fit: true
                    - id: 940
                      url: http://nstack.test/api/v2/localize/resources/940
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 44
                        name: Swedish
                        locale: sv-SE
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 941
                      url: http://nstack.test/api/v2/localize/resources/941
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 9
                        name: German (Germany)
                        locale: de-DE
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 942
                      url: http://nstack.test/api/v2/localize/resources/942
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 36
                        name: Polish
                        locale: pl-PL
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                  platform: android
                  created_at: '"2019-06-17T05:26:58+00:00"'
                  last_updated: '"2019-06-15T14:29:50+00:00"'
                meta:
                  accept_Language: null
        "401":
            description: 'Missing Application Credentials'
        "403":
            description: 'Forbidden'
        "404":
            description: 'Entity not found'
        "412":
            description: 'Precondition failed _Please read response message_'
        "445":
            description: 'Entity not found'
        "500":
            description: 'Internal Server Error _Please read response message_'
      deprecated: false   
      
      
      
      
  
components:
  schemas:
    Indexlanguages:
      title: Indexlanguages
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Datum'
          description: ''
      example:
        data:
          - id: 11
            name: English (UK)
            locale: en-GB
            direction: LRM
            is_default: true
            is_best_fit: true
          - id: 14
            name: Spanish (Spain)
            locale: es-ES
            direction: LRM
            is_default: false
            is_best_fit: false
          - id: 6
            name: Danish
            locale: da-DK
            direction: LRM
            is_default: false
            is_best_fit: false
    Datum:
      title: Datum
      required:
        - id
        - name
        - locale
        - direction
        - is_default
        - is_best_fit
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        locale:
          type: string
        direction:
          type: string
        is_default:
          type: boolean
        is_best_fit:
          type: boolean
      example:
        id: 11
        name: English (UK)
        locale: en-GB
        direction: LRM
        is_default: true
        is_best_fit: true
    Languagebestfit:
      title: Languagebestfit
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Datum'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
          id: 11
          name: English (UK)
          locale: en-GB
          direction: LRM
          is_default: false
          is_best_fit: false
        meta:
          Accept-Language: null
    Meta:
      title: Meta
      required:
        - Accept-Language
      type: object
      properties:
        Accept-Language:
          type: string
      example:
        Accept-Language: null
    Language:
      title: Language
      required:
        - id
        - name
        - locale
        - direction
        - is_default
        - is_best_fit
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        locale:
          type: string
        direction:
          type: string
        is_default:
          type: boolean
        is_best_fit:
          type: boolean
      example:
        id: 11
        name: English (UK)
        locale: en-GB
        direction: LRM
        is_default: true
        is_best_fit: true
    Showresource:
      title: Showresource
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Datum'
        meta:
          $ref: '#/components/schemas/Meta'
    TestResponse:
      title: Response
      required:
        - id
        - slug
      type: object
      properties:
        id:
          type: integer
          format: int32
        slug:
          type: string
    TestResponses:
      title: Responses
      required:
        - data
      type: object
      properties:
        data:
          $ref: "#/components/schemas/TestResponse"
    Messages:
      title: Messages
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Message'
    ActionEventsRequest:
      title: ActionEventsRequest
      description: either guid or action
      required:
        - guid
        - action
      type: object
      properties:
        guid:
          type: string
        action:
          type: string
      example:
        guid: 236
        action: masiakla-tutaj
    AnswerRequest:
      title: AnswerRequest
      required:
        - guid
        - answer
      type: object
      properties:
        guid:
          type: string
        answer:
          type: string
      example:
        guid: hasfdda-safsafad-asdasd-asdas
        answer: negative
    AppOpen:
      title: App Open
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppOpenData'
        meta:
          $ref: '#/components/schemas/AppOpenMeta'
      example:
        data:
          count: 74
          update:
            newer_version:
              state: yes
              last_id: 621
              version: 2.0 - 2.0
              link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
              translate:
                title: New version is out, please update
                message: ''
                positiveBtn: Update
                negativeBtn: Cancel
          localize:
            - id: 938
              url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
              last_updated_at: '"2019-06-16T14:29:50+00:00"'
              should_update: true
              language:
                id: 56
                name: English
                locale: en_EN
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 939
              url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
              last_updated_at: '"2019-06-16T14:44:30+00:00"'
              should_update: true
              language:
                id: 6
                name: Danish
                locale: da-DK
                direction: LRM
                is_default: true
                is_best_fit: true
            - id: 940
              url: http://nstack.test/api/v2/localize/resources/940
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 44
                name: Swedish
                locale: sv-SE
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 941
              url: http://nstack.test/api/v2/localize/resources/941
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 9
                name: German (Germany)
                locale: de-DE
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 942
              url: http://nstack.test/api/v2/localize/resources/942
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 36
                name: Polish
                locale: pl-PL
                direction: LRM
                is_default: false
                is_best_fit: false
          platform: android
          created_at: '"2019-06-17T05:26:58+00:00"'
          last_updated: '"2019-06-15T14:29:50+00:00"'
        meta:
          accept_Language: null
    AppOpenData:
      title: AppOpenData
      required:
        - count
        - update
        - localize
        - platform
        - created_at
        - last_updated
        - rate_reminder
      type: object
      properties:
        count:
          type: integer
          format: int32
        update:
          $ref: '#/components/schemas/Update'
        rate_reminder:
          $ref: '#/components/schemas/RateReminder'
        platform:
          type: string
        created_at:
          type: string
        last_updated:
          type: string
      example:
        count: 74
        update:
          newer_version:
            state: yes
            last_id: 621
            version: 2.0 - 2.0
            link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
            translate:
              title: New version is out, please update
              message: ''
              positiveBtn: Update
              negativeBtn: Cancel
        localize:
          - id: 938
            url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
            last_updated_at: 2019-06-16T14:29:50+00:00
            should_update: true
            language:
              id: 56
              name: English
              locale: en_EN
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 939
            url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
            last_updated_at: 2019-06-16T14:44:30+00:00
            should_update: true
            language:
              id: 6
              name: Danish
              locale: da-DK
              direction: LRM
              is_default: true
              is_best_fit: true
          - id: 940
            url: http://nstack.test/api/v2/localize/resources/940
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 44
              name: Swedish
              locale: sv-SE
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 941
            url: http://nstack.test/api/v2/localize/resources/941
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 9
              name: German (Germany)
              locale: de-DE
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 942
            url: http://nstack.test/api/v2/localize/resources/942
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 36
              name: Polish
              locale: pl-PL
              direction: LRM
              is_default: false
              is_best_fit: false
        platform: android
        created_at: 2019-06-17T05:26:58+00:00
        last_updated: 2019-06-15T14:29:50+00:00
    Update:
      title: Update
      required:
        - newer_version
      type: object
      properties:
        newer_version:
          $ref: '#/components/schemas/NewerVersion'
      example:
        newer_version:
          state: yes
          last_id: 621
          version: 2.0 - 2.0
          link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
          translate:
            title: New version is out, please update
            message: ''
            positiveBtn: Update
            negativeBtn: Cancel
    NewerVersion:
      title: NewerVersion
      required:
        - state
        - last_id
        - version
        - link
        - translate
      type: object
      properties:
        state:
          type: string
        last_id:
          type: integer
          format: int32
        version:
          type: string
        link:
          type: string
        translate:
          $ref: '#/components/schemas/TranslateImport'
      example:
        state: yes
        last_id: 621
        version: 2.0 - 2.0
        link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
        translate:
          title: New version is out, please update
          message: ''
          positiveBtn: Update
          negativeBtn: Cancel
    AppOpenMeta:
      title: AppOpenMeta
      required:
        - accept_Language
      type: object
      properties:
        accept_Language:
          type: string
      example:
        accept_Language: null
    TranslateImport:
      title: TranslateImport
      required:
        - submitBtn
        - title
      type: object
      properties:
        submitBtn:
          type: string
        title:
          type: string
      example:
        submitBtn: Upload file
        title: Import
    RateReminder:
      title: RateReminder
      required:
        - title
        - body
        - yesBtn
        - laterBtn
        - noBtn
        - link
      properties:
        title:
          type: string
        body:
          type: string
        yesBtn:
          type: string
        laterBtn:
          type: string
        noBtn:
          type: string
        link:
          type: string
    Scropper:
      title: Get focal point
      required:
        - xaxis
        - yaxis
        - face_bb
      properties:
        xaxis:
          type: number
          format: double
        yaxis:
          type: number
          format: double
        face_bb:
          type: array
          items:
            $ref: '#/components/schemas/FaceBb'
    FaceBb:
      title: FaceBb
      required:
        - top
        - bottom
        - left
        - right
      properties:
        bottom:
          type: number
          format: double
        left:
          type: number
          format: double
        right:
          type: number
          format: double
        top:
          type: number
          format: double
    VersionControl:
      title: Version Control
      required:
        - update
        - update_versions
        - new_in_version
      properties:
        update:
          type: string
        update_versions:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVersion'
        new_in_version:
          type: boolean
    UpdateVersion:
      title: Update version
      required:
        - id
        - version
        - update
        - new_in_version
      properties:
        id:
          type: integer
        version:
          type: string
        update:
          type: string
        new_in_version:
          type: boolean
        change_log:
          type: string
        file_url:
          type: string
    MarkAsSeenResponse:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - guid
            - message_id
            - created
          properties:
            id:
              type: integer
              format: int32
            guid:
              type: string
            message_id:
              type: integer
              format: int32
            created:
              type: string
              format: 'date-time'
    CollectionResponse:
      title: Collection
      type: array
      items:
        $ref: '#/components/schemas/ItemResponse'
    ItemResponse:
      title: Item
      required:
          - itemId
      properties:
          itemId:
            type: integer
          itemValue0Int:
            type: integer
          itemValue1string:
            type: string
          itemValue2float:
            type: number
            format: double
          itemValue3wysiwygsim:
            type: string
          itemValue4asset:
            type: string
          itemValue5boolean:
            type: boolean
          itemValue6wysiwygadvanced:
            type: string
      x-send-file-in-body: false
    IndexProposal:
      type: object
      title: IndexProposal
      required:
        - key
        - value
        - locale
        - platform
        - guid
        - section
      properties:
                key:
                  type: string
                value:
                  type: string
                locale:
                  type: string
                platform:
                  type: string
                guid:
                  type: string
                section:
                  type: string
    Visualization:
      type:
        object
      title: Visualization
      required: 
        - key
      properties:
        key:
          type: string
        mode: 
          type: string
    DashboardById:
      title: Dashboard by id
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dashboard'
    Dashboard:
       title: Dashboard
       properties: 
         id:
           type: integer
         name: 
           type: string
         key:
           type: string
         theme:
           type: string
         logo_url:
           type: string
         items:
          type: array
          items: 
            $ref: '#/components/schemas/DashboardData'
    DashboardData: 
      type: 
        object
      title: Dashboard Data
      properties:
        id:
          type: integer
        x:
          type: integer
        y:
          type: integer
        width:
          type: integer
        height:
          type: integer
    Terms:
      type:
        object
      title: Terms
      required: 
        - N-Meta
        - Acceptable-Language
      properties:
        N-Meta:
          type: object
          items:
            $ref: '#/components/schemas/Meta'
        Acceptable-Language: 
          type: string
          items:
            $ref: '#/components/schemas/Language'
    TermsByIndex:
      type:
        object
      title: Terms By index
      required: 
        - slugOrId
        - N-Meta
        - Acceptable-Language
      properties:
        slugOrId:
          type: string
        N-Meta:
          type: object
          items:
            $ref: '#/components/schemas/Meta'
        Acceptable-Language: 
          type: string
          items:
            $ref: '#/components/schemas/Language'
    TermsByGUID:
      type:
        object
      title: Terms By guid
      required: 
        - slugOrId
        - N-Meta
        - Acceptable-Language
      properties:
        slugOrId:
          type: string
        N-Meta:
          type: object
          items:
            $ref: '#/components/schemas/Meta'
        Acceptable-Language: 
          type: string
          items:
            $ref: '#/components/schemas/Language'
    ContinentsById:
      title: Continents By Id
      properties:
        data:
            $ref: '#/components/schemas/Continent'        
    Continents:
      title: Continents
      required: 
        - continent
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Continent'
    Continent:
      title: Continent
      required: 
        - id
        - name
        - code
        - image_url
      properties: 
        id:
          type: integer
        name: 
          type: string
        code: 
          type: string
        image_url:
          type: 
            string
    Countries:
      title: Countries
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    Country:
      title: Country
      required:
        - id
        - code
        - code_iso
        - name
        - native
        - phone
        - continent
        - capital
        - capital_lat
        - capital_lng
        - currency
        - currency_name
        - language
        - image_1_url
        - image_2_url
        - capital_timezone
      properties:
        id:
          type: string
        code:
          type: string
        code_iso:
          type: string
        name:
          type: string
        native:
          type: string
        phone:
          type: integer
        continent:
          type: string
        capital:
          type: string
        capital_lat:
          type: number
          format: float
        capital_lng:
          type: number 
          format: float
        currency:
          type: string
        currency_name:
          type: string
        language: 
          type: string
        image_1_url:
          type: string
        image_2_url:
          type: string
        capital_timezone:
            $ref: '#/components/schemas/Timezone'
    Timezones:
      title: Timezones
      properties:
        data:
            $ref: '#/components/schemas/Timezone'         
    TimezoneByLatLng:
      title: Timezone by Latitude and Longitude
      properties:
        data:
            $ref: '#/components/schemas/Timezone'       
    Timezone:
      title: Timezone
      required:
        - id
        - name
        - abbr
        - offset_sec
        - label
      properties:
        id:
          type: integer
        name:
          type: string
        abbr:
          type: string
        offset_sec:
          type: integer
        label:
          type: string
          
          
          
          
    Validation:
      title: User
      properties:
        "ok":
          type: boolean
    UGC:
      title: User Generated comments
      properties:
        type:
          type: string
        platform:
          type: string
        os:
          type: string
        app_version:
          type: string
        device:
          type: string
        name: 
          type: string
        email:
          type: string
        message: 
          type: string
        image:
          type: object
          description: 'jpg, jpeg, png'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
        breadcrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Breadcrumb'
    Breadcrumb:
      title: Breadcrumb
      properties:
        event:
          type: string
        timestamp:
          type: string
          description: 'YYYY-MM-DD'
        meta:   
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    RateReminderV2:
      title: Rate Reminder
      properties:
        id:
          type: integer
        poits_to_trigger: 
          type: integer
        days_delay_on_skip:
          type: integer
        localization: 
            $ref: '#/components/schemas/RateReminder'
    Collection:
      title: Collection
      required: 
                - k0int
                - key1string
                - key2float
                - key3wysiwygsim
                - key4asset
                - key5boolean
                - key6wysiwygadvanced
      properties:
                k0int:
                  type: integer
                  format: int32
                key1string:
                  type: string
                key2float:
                  type: number
                  format: double
                key3wysiwygsim:
                  type: string
                key4asset:
                  type: string
                key5boolean:
                  type: boolean
                key6wysiwygadvanced:
                  type: string        
    Message:  
      title: Message
      properties:
        id:
          type: integer
        message: 
          type: string
        show_setting: 
          type: string
        url:
          type: string
          nullable: true
          example: null
        localization:
          $ref: '#/components/schemas/Localization'
    Localization:
      title: Localization
      properties:
        okBtn:
          type: string
          example: Ok
        urlBtn:
          type: string
          example: Open URL
    Localize:
      title: Localize
      properties:
        id: 
          type: integer
        url: 
          type: string
        last_updated_at:
          type: string
        should_update:
          type: boolean
        language:
          $ref: '#/components/schemas/Language'
    IPResponse:
      title: IP Response
      properties:
        data:
          $ref: '#/components/schemas/IpData'
    IpData:
      title: IP data
      type: object
      properties: 
        id: 
          type: integer
          example: 8346961
        ip_start:
          type: string
          example: 202.129.244.0
        ip_end:
          type: string
          example: 202.129.247.255
        country:
          type: string
          example: AU
        state_prov:
          type: string
          example: Victoria
        city:
          type: string
          example: Mount Beauty
        lat:
          type: number
          format: float
          example: -36.73628
        lng:
          type: number
          format: float
          example: 147.17531
        time_zone_offset:
          type: string 
          example: 11
        time_zone_name:
          type: string
          example: Australia/Melbourne
        isp_name":
          type: string
          example: N/A
        connection_type:
          type: string
          example: N/A
        type:
          type: string
          example: ipv4
        required_ip:
          type: string
          example: 202.129.246.215
    TermsResponse:
      title: Terms Response
      
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Term'  
    Term: 
      title: Term
      properties:
        id:
          type: integer
        version:
          type: string
        version_name:
          type: string
        published_at:
          type: string
        has_viewed:
          type: boolean
    TermsWithAccLanguage:
      title: Terms with acceptable language
      properties:
        data:
          $ref: '#/components/schemas/TermLanguage'
    TermLanguage:
      title: Term with language
      properties:
        id:
          type: integer
        version:
          type: string
        version_name:
          type: string
        published_at:
          type: string
        has_viewed:
          type: boolean
        content:
            $ref: '#/components/schemas/Content'
    Content:
      properties:
          data:
            type: string
          locale:
            type: string
        
      



  securitySchemes:
    AppId:  
      type: apiKey
      in: header
      name: X-APPLICATION-ID
      description: '_Required Application id from_ [Nstack](https://nstack.io) _known as_ **nstackAppid**'
    ApiKey:
      type: apiKey
      in: header
      name: X-REST-API-KEY
      description: '_Required Rest API key from_ [Nstack](https://nstack.io) _known as_ **nstackRestKey**'
      
  

     

   


    

              
tags:
  - name: Scropper
  - name: Stagger
  - name: Collections
  - name: Responses
  - name: Files
  - name: Localize
  - name: Dashboards
  - name: Terms
  - name: Version control
  - name: Messages
  - name: Rate reminders
  - name: Rate reminders V2
  - name: Continents
  - name: Countries
  - name: Languages
  - name: IP Addresses
  - name: Time zones
  - name: UGC
  - name: Validator
  - name: App open
  - name: Admin API
